mutate(., ctd_longitude..degrees_east. = if_else(Cast_No.==1, Lon_notes,ctd_longitude..degrees_east.)) %>%
mutate(., ctd_pressure = if_else(Cast_No.==1, Depth_m_notes,ctd_pressure)) %>%
mutate(., ctd_time..UTC. = if_else(Cast_No.==1, Date_UTC_notes,ctd_time..UTC.)) %>%
mutate(., ctd_time..UTC. = str_replace_all(ctd_time..UTC.,"\\/", "-")) %>%
mutate(., ctd_time..UTC. = str_replace_all(ctd_time..UTC.,"08 22", "08T22")) %>%
mutate(ctd_time..UTC. = if_else(Cast_No.==1, str_c(ctd_time..UTC.,"Z"),ctd_time..UTC.)) %>%
dplyr::select(Sample_Name, Biological_Replicate, Technical_Replicate, Negative_control, Cruise_ID_short, Cruise_ID_long, Cast_No.,Rosette_position, Station, Sample_volume_ml,
Time=ctd_time..UTC.,
Depth_m=ctd_pressure,
lat=ctd_latitude..degrees_north.,
lon = ctd_longitude..degrees_east.,
Temp_C= ctd_temperature_ch1..degree_C.,
PSU_ppt = ctd_salinity_ch1..PSU.,
OxySatPerc_percent = ctd_oxy_percentsat_ch1..percent.,
OxyConc_umol.per.l = ctd_oxy_conc_ch1..umol.kg.,
Chla_ugrams.per.l = ctd_chlor_fluorescence..ugrams.l.,
PO4_umol.per.l = ctd_PO4..uM.l.,
NO2_umol.per.l=ctd_NO2..uM.l.,
NO3_umol.per.l=ctd_NO3..uM.l.,
NH4_umol.per.l =ctd_NH4..uM.l.) -> REVAMP_SKQ21_12S
FinalOME_Merge_DY22_09 %>%
dplyr::select(Sample_Name, Biological_Replicate, Technical_Replicate, Negative_control, Cruise_ID_short, Cruise_ID_long, Cast_No.,Rosette_position, Station, Sample_volume_ml,
Time=ctd_time..UTC.,
Depth_m=ctd_pressure,
lat=ctd_latitude..degrees_north.,
lon = ctd_longitude..degrees_east.,
Temp_C= ctd_temperature_ch1..degree_C.,
PSU_ppt = ctd_salinity_ch1..PSU.,
OxySatPerc_percent = ctd_oxy_percentsat_ch1..percent.,
OxyConc_umol.per.l = ctd_oxy_conc_ch1..umol.kg.,
Chla_ugrams.per.l = ctd_chlor_fluorescence..ugrams.l.,
PO4_umol.per.l = ctd_PO4..uM.l.,
NO2_umol.per.l=ctd_NO2..uM.l.,
NO3_umol.per.l=ctd_NO3..uM.l.,
NH4_umol.per.l =ctd_NH4..uM.l.) -> REVAMP_DY22_09
FinalOME_Merge_SKQ23_12S %>%
mutate(., ctd_latitude..degrees_north. = if_else(is.na(ctd_latitude..degrees_north.), Lat_notes,ctd_latitude..degrees_north.)) %>%
mutate(., ctd_longitude..degrees_east. = if_else(is.na(ctd_longitude..degrees_east.), Lon_notes,ctd_longitude..degrees_east.)) %>%
mutate(., ctd_pressure = if_else(is.na(ctd_pressure), Depth_m_notes,ctd_pressure)) %>%
mutate(., ctd_time..UTC. = if_else(is.na(ctd_time..UTC.), str_c(Date_UTC_notes,"Z"),ctd_time..UTC.)) %>%
mutate(., ctd_time..UTC. = str_replace_all(ctd_time..UTC.,"\\/", "-")) %>%
mutate(., ctd_time..UTC. = str_replace_all(ctd_time..UTC.," ", "T")) %>%
dplyr::select(Sample_Name, Biological_Replicate, Technical_Replicate, Negative_control, Cruise_ID_short, Cruise_ID_long, Cast_No.,Rosette_position, Station, Sample_volume_ml,
Time=ctd_time..UTC.,
Depth_m=ctd_pressure,
lat=ctd_latitude..degrees_north.,
lon = ctd_longitude..degrees_east.,
Temp_C= ctd_temperature_ch1..degree_C.,
PSU_ppt = ctd_salinity_ch1..PSU.,
OxySatPerc_percent = ctd_oxy_percentsat_ch1..percent.,
OxyConc_umol.per.l = ctd_oxy_conc_ch1..umol.kg.,
Chla_ugrams.per.l = ctd_chlor_fluorescence..ugrams.l.,
PO4_umol.per.l = ctd_PO4..uM.l.,
NO2_umol.per.l=ctd_NO2..uM.l.,
NO3_umol.per.l=ctd_NO3..uM.l.,
NH4_umol.per.l =ctd_NH4..uM.l.) -> REVAMP_SKQ23_12S
FinalOME_Merge_DY22_06 %>%
mutate(., ctd_latitude..degrees_north. = if_else(is.na(ctd_latitude..degrees_north.), btl_latitude..degrees_north.,ctd_latitude..degrees_north.)) %>%
mutate(., ctd_longitude..degrees_east. = if_else(is.na(ctd_longitude..degrees_east.), btl_longitude..degrees_east.,ctd_longitude..degrees_east.)) %>%
mutate(., ctd_pressure = if_else(is.na(ctd_pressure), btl_pressure..decibar.,ctd_pressure)) %>%
mutate(., ctd_pressure = if_else(is.na(ctd_pressure), Depth_m_notes,ctd_pressure)) %>%
mutate(., ctd_time..UTC. = if_else(is.na(ctd_time..UTC.), btl_time..UTC.,ctd_time..UTC.)) %>%
dplyr::select(Sample_Name, Biological_Replicate, Technical_Replicate, Negative_control, Cruise_ID_short, Cruise_ID_long, Cast_No.,Rosette_position, Station, Sample_volume_ml,
Time=ctd_time..UTC.,
Depth_m=ctd_pressure,
lat=ctd_latitude..degrees_north.,
lon = ctd_longitude..degrees_east.,
Temp_C= btl_temperature_ch1..degree_C.,
PSU_ppt = btl_salinity_ch1..PSU.,
OxySatPerc_percent = btl_oxy_percentsat_ch1..percent.,
OxyConc_umol.per.l = btl_oxy_conc_ch1..micromole.kg.,
Chla_ugrams.per.l = btl_chlor_fluorescence..ugrams.l.,
PO4_umol.per.l = ctd_PO4..uM.l.,
NO2_umol.per.l=ctd_NO2..uM.l.,
NO3_umol.per.l=ctd_NO3..uM.l.,
NH4_umol.per.l =ctd_NH4..uM.l.) -> REVAMP_DY22_06
# Norseman2020_long
FinalOME_Merge_NO20_01 %>%
mutate(., ctd_time..UTC. = str_replace_all(Date_UTC_btl,"\\/", "-")) %>%
mutate(., ctd_time..UTC. = str_replace_all(ctd_time..UTC.," ", "T")) %>%
mutate(ctd_time..UTC. = str_c(ctd_time..UTC.,"Z"),ctd_time..UTC.) %>%
mutate(., OxySatPerc_percent= NA) %>%
dplyr::select(Sample_Name, Biological_Replicate, Technical_Replicate, Negative_control, Cruise_ID_short, Cruise_ID_long, Cast_No.,Rosette_position, Station, Sample_volume_ml,
Time=ctd_time..UTC.,
Depth_m=btl_Pressure.db.,
lat=btl_Latitude,
lon = btl_Longitude,
Temp_C= btl_Temperature.deg.C.,
PSU_ppt = btl_Salinity.psu.,
OxySatPerc_percent = OxySatPerc_percent,
OxyConc_umol.per.l = btl_Oxygen.umol.kg.,
Chla_ugrams.per.l = btl_Fluorescence.mg.m.3.,
PO4_umol.per.l = btl_phosphate.µM,
NO2_umol.per.l=btl_nitrate.nitriteµM,
NO3_umol.per.l=btl_nitrate.nitriteµM,
NH4_umol.per.l =btl_ammonia) -> REVAMP_NO20_01
#RCGOA2022_long
#  carbonate chemistry not included since no other cruise has that data as of 12/26/2024
FinalOME_Merge_RC0083  %>%
mutate(., ctd_time..UTC. = str_replace_all(Date_UTC_btl,"\\/", "-")) %>%
mutate(., ctd_time..UTC. = str_replace_all(ctd_time..UTC.," ", "T")) %>%
mutate(ctd_time..UTC. = str_c(ctd_time..UTC.,"Z"),ctd_time..UTC.) %>%
dplyr::select(Sample_Name, Biological_Replicate, Technical_Replicate, Negative_control, Cruise_ID_short, Cruise_ID_long, Cast_No.,Rosette_position, Station, Sample_volume_ml,
Time=ctd_time..UTC.,
Depth_m=btl2_CTDPRES,
lat=btl2_Latitude,
lon = btl2_Longitude,
Temp_C= btl2_CTDTEMP_ITS90,
PSU_ppt = btl2_CTDSAL_PSS78,
OxySatPerc_percent = btl_Sbeox0PS,
OxyConc_umol.per.l = btl_Sbox0Mm.Kg,
Chla_ugrams.per.l = btl_FlECO.AFL,
PO4_umol.per.l = btl2_Phosphate.umol.kg.1,
NO2_umol.per.l=btl2_Nitrite.umol.kg.1,
NO3_umol.per.l=btl2_Nitrate.umol.kg.1,
NH4_umol.per.l =btl2_Ammonium.umol.kg.1) -> REVAMP_RC0083
#This is also missing a bunch of cast data, Shaun said he would send the processed, raw data is missing casts for whatever reason
#DY23_06
FinalOME_Merge_DY23_06 %>%
mutate(., btl_latitude..degrees_north. = if_else(is.na(btl_time..UTC.), Lat_notes,btl_latitude..degrees_north.)) %>%
mutate(., btl_longitude..degrees_east. = if_else(is.na(btl_time..UTC.), Lon_notes,btl_longitude..degrees_east.)) %>%
mutate(., btl_pressure..decibar. = if_else(is.na(btl_time..UTC.), Depth_m_notes,btl_pressure..decibar.)) %>%
mutate(., btl_time..UTC. = if_else(is.na(btl_time..UTC.), str_c(Date_UTC_notes,"Z"),btl_time..UTC.)) %>%
mutate(., btl_time..UTC. = str_replace_all(btl_time..UTC.,"\\/", "-")) %>%
mutate(., btl_time..UTC. = str_replace_all(btl_time..UTC.," ", "T")) %>%
mutate(.,PO4_umol.per.l = NA,
NO2_umol.per.l=NA,
NO3_umol.per.l=NA,
NH4_umol.per.l =NA)%>%
dplyr::select(Sample_Name, Biological_Replicate, Technical_Replicate, Negative_control, Cruise_ID_short, Cruise_ID_long, Cast_No.,Rosette_position, Station, Sample_volume_ml,
Time=btl_time..UTC.,
Depth_m=btl_pressure..decibar.,
lat=btl_latitude..degrees_north.,
lon = btl_longitude..degrees_east.,
Temp_C= btl_temperature_ch2..degree_C.,
PSU_ppt = btl_salinity_ch1..PSU.,
OxySatPerc_percent = btl_oxy_percentsat_ch1..percent.,
OxyConc_umol.per.l = btl_oxy_conc_ch1..micromole.kg.,
Chla_ugrams.per.l = btl_chlor_fluorescence..ugrams.l.,
PO4_umol.per.l = PO4_umol.per.l,
NO2_umol.per.l=NO2_umol.per.l,
NO3_umol.per.l=NO3_umol.per.l,
NH4_umol.per.l =NH4_umol.per.l) -> REVAMP_DY23_06
FinalOME_Merge_M2_PPS_0523 %>%
mutate(., ctd_time..UTC. = str_replace_all(Date_UTC_notes,"\\/", "-")) %>%
mutate(., ctd_time..UTC. = str_replace_all(ctd_time..UTC.," ", "T")) %>%
mutate(ctd_time..UTC. = str_c(ctd_time..UTC.,"Z"),ctd_time..UTC.) %>%
mutate(.,
Temp_C= NA,
PSU_ppt = NA,
OxySatPerc_percent = NA,
OxyConc_umol.per.l = NA,
Chla_ugrams.per.l = NA,
PO4_umol.per.l = NA,
NO2_umol.per.l=NA,
NO3_umol.per.l=NA,
NH4_umol.per.l =NA)%>%
dplyr::select(Sample_Name, Biological_Replicate, Technical_Replicate, Negative_control, Cruise_ID_short, Cruise_ID_long, Cast_No.,Rosette_position, Station, Sample_volume_ml,
Time=ctd_time..UTC.,
Depth_m=Depth_m_notes,
lat=Lat_notes,
lon = Lon_notes,
Temp_C= Temp_C,
PSU_ppt = PSU_ppt,
OxySatPerc_percent = OxySatPerc_percent,
OxyConc_umol.per.l = OxyConc_umol.per.l,
Chla_ugrams.per.l = Chla_ugrams.per.l,
PO4_umol.per.l = PO4_umol.per.l,
NO2_umol.per.l=NO2_umol.per.l,
NO3_umol.per.l=NO3_umol.per.l,
NH4_umol.per.l =NH4_umol.per.l) -> REVAMP_PPS_0523
FinalOME_Merge_AquaM_23 %>%
mutate(., ctd_time..UTC. = str_replace_all(Date_UTC_notes,"\\/", "-")) %>%
mutate(., ctd_time..UTC. = str_replace_all(ctd_time..UTC.," ", "T")) %>%
mutate(ctd_time..UTC. = str_c(ctd_time..UTC.,"Z"),ctd_time..UTC.) %>%
mutate(.,
Temp_C= NA,
PSU_ppt = NA,
OxySatPerc_percent = NA,
OxyConc_umol.per.l = NA,
Chla_ugrams.per.l = NA,
PO4_umol.per.l = NA,
NO2_umol.per.l=NA,
NO3_umol.per.l=NA,
NH4_umol.per.l =NA)%>%
dplyr::select(Sample_Name, Biological_Replicate, Technical_Replicate, Negative_control, Cruise_ID_short, Cruise_ID_long, Cast_No.,Rosette_position, Station, Sample_volume_ml,
Time=ctd_time..UTC.,
Depth_m=Depth_m_notes,
lat=Lat_notes,
lon = Lon_notes,
Temp_C= Temp_C,
PSU_ppt = PSU_ppt,
OxySatPerc_percent = OxySatPerc_percent,
OxyConc_umol.per.l = OxyConc_umol.per.l,
Chla_ugrams.per.l = Chla_ugrams.per.l,
PO4_umol.per.l = PO4_umol.per.l,
NO2_umol.per.l=NO2_umol.per.l,
NO3_umol.per.l=NO3_umol.per.l,
NH4_umol.per.l =NH4_umol.per.l) -> REVAMP_AquaM_23
rbind(REVAMP_DY20_12, REVAMP_DY22_06, REVAMP_DY22_09, REVAMP_DY23_06, REVAMP_NO20_01, REVAMP_PPS_0523, REVAMP_RC0083, REVAMP_SKQ21_12S, REVAMP_SKQ23_12S, REVAMP_AquaM_23) -> revamp_sample_metadata
revamp_sample_metadata %>%
filter(., str_detect(Sample_Name,"E1148"))
revamp_format_run1_4 %>%
dplyr::select(-sites, -lat, -long) %>%
mutate(., Sample_Name = str_replace(Sample,"_","\\.")) %>%
mutate(.,Sample_Name = str_remove(Sample_Name,"_PCR1|_PCR2|_PCR3")) %>%
mutate(.,Sample_Name = str_replace(Sample_Name,"_NO20",".NO20")) %>%
mutate(.,Sample_Name = str_replace(Sample_Name,"_DY20",".DY2012")) %>%
mutate(.,Sample_Name = str_replace(Sample_Name,"E26.1B.DY2012","E26.1B.NC.DY2012")) %>%
mutate(.,Sample_Name = str_replace(Sample_Name,"E44.DY20","E44.DY2012")) %>%
left_join(revamp_sample_metadata) %>%
mutate(., sites = Station) -> run1_4_revamp_formatted_metadata
run1_4_revamp_formatted_metadata %>%
filter(., str_detect(Sample, "DY2206"))
readr::write_excel_csv(run1_4_revamp_formatted_metadata, file="run1_4_revamp_formatted_metadata.csv")
library(here)
library(tidyverse)
library(Biostrings)
run1_4_revamp_formatted_metadata <- read.csv(here("run1_4_revamp_formatted_metadata.csv"))
run2_MiFish_tax <- read.table(here("data","REVAMP_out","Run2_from_poseidon_20250103","MiFish","ASV2Taxonomy","MiFish_RUN1_asvTaxonomyTable.txt"), sep="\t", header=T)
run2_MiFish_fasta <- readDNAStringSet(here("data","REVAMP_out","Run2_from_poseidon_20250103","MiFish","dada2","ASVs.fa"), format="fasta" )
as.data.frame(run2_MiFish_fasta) %>%
as_tibble(rownames = "ASV") %>%
left_join(run2_MiFish_tax) %>%
rename_with(.cols = everything(), function(x){paste0("Run2:", x)}) %>%
dplyr::rename(Sequence=`Run2:x`) -> run2_MiFish_fasta_df
run3_MiFish_tax <- read.table(here("data","REVAMP_out","Run3_from_poseidon_20250103","MiFish_REVAMP_out","ASV2Taxonomy","MiFish_REVAMP_out_asvTaxonomyTable.txt"), sep="\t", header=T)
run3_MiFish_fasta <- readDNAStringSet(here("data","REVAMP_out","Run3_from_poseidon_20250103","MiFish_REVAMP_out","dada2","ASVs.fa"), format="fasta" )
as.data.frame(run3_MiFish_fasta) %>%
as_tibble(rownames = "ASV") %>%
left_join(run3_MiFish_tax) %>%
rename_with(.cols = everything(), function(x){paste0("Run3:", x)}) %>%
dplyr::rename(Sequence=`Run3:x`)-> run3_MiFish_fasta_df
run4_MiFish_tax <- read.table(here("data","REVAMP_out","Run4_from_poseidon_20250121","MiFish_REVAMP_out","ASV2Taxonomy","MiFish_REVAMP_out_asvTaxonomyTable.txt"), sep="\t", header=T)
run4_MiFish_fasta <- readDNAStringSet(here("data","REVAMP_out","Run4_from_poseidon_20250121","MiFish_REVAMP_out","dada2","ASVs.fa"), format="fasta" )
as.data.frame(run4_MiFish_fasta) %>%
as_tibble(rownames = "ASV") %>%
left_join(run4_MiFish_tax) %>%
rename_with(.cols = everything(), function(x){paste0("Run4:", x)}) %>%
dplyr::rename(Sequence=`Run4:x`)-> run4_MiFish_fasta_df
full_join(run2_MiFish_fasta_df, run3_MiFish_fasta_df) %>%
full_join(run4_MiFish_fasta_df) %>%
mutate(., ASV_combo = row_number(),
ASV_combo = str_c("ASVc_",ASV_combo)) %>%
mutate(., Kingdom = if_else(!is.na(`Run3:Kingdom`), `Run3:Kingdom`,`Run2:Kingdom`),
Phylum= if_else(!is.na(`Run3:Phylum`), `Run3:Phylum`,`Run2:Phylum`),
Class= if_else(!is.na(`Run3:Class`), `Run3:Class`,`Run2:Class`),
Order= if_else(!is.na(`Run3:Order`), `Run3:Order`,`Run2:Order`),
Family= if_else(!is.na(`Run3:Family`), `Run3:Family`,`Run2:Family`),
Genus= if_else(!is.na(`Run3:Genus`), `Run3:Genus`,`Run2:Genus`),
Species= if_else(!is.na(`Run3:Species`), `Run3:Species`,`Run2:Species`)) %>%
mutate(., Kingdom = if_else(!is.na(`Kingdom`), `Kingdom`,`Run4:Kingdom`),
Phylum= if_else(!is.na(`Phylum`), `Phylum`,`Run4:Phylum`),
Class= if_else(!is.na(`Class`), `Class`,`Run4:Class`),
Order= if_else(!is.na(`Order`), `Order`,`Run4:Order`),
Family= if_else(!is.na(`Family`), `Family`,`Run4:Family`),
Genus= if_else(!is.na(`Genus`), `Genus`,`Run4:Genus`),
Species= if_else(!is.na(`Species`), `Species`,`Run4:Species`)) %>%
dplyr::select(ASV_combo, `Run4:ASV`,`Run3:ASV`, `Run2:ASV`, Sequence, Kingdom,Phylum,Class, Order, Family, Genus, Species)  -> run2_3_4_MiFish_united_ASV_tables
# Technically the above code prioritizes taxonomic assignments made with Run 3 over the other runs. All assignments were made with the same method so they should be identical.
saveRDS(run2_3_4_MiFish_united_ASV_tables, here("data","long_data","run2_3_4_MiFish_united_ASV_tables.RDS"))
run2_MiFish_asv <- read.table(here("data","REVAMP_out","Run2_from_poseidon_20250103","MiFish","dada2","ASVs_counts.tsv"), sep="\t", header=T) %>%
dplyr::rename(ASV=x)
run2_MiFish_asv %>%
dplyr::rename(`Run2:ASV`=ASV) %>%
left_join(run2_3_4_MiFish_united_ASV_tables) %>%
rename_at(vars(starts_with("MP_")), funs(str_replace(., "MP_", ""))) -> run2_MiFish_merge
run2_MiFish_merge %>%
pivot_longer(cols = c(-`ASV_combo`, -`Run2:ASV`, -`Run3:ASV`,-`Run4:ASV`,-`Sequence`,-Kingdom, -Phylum, -Class, -Order, -Family, -Genus, -Species), names_to = "Sample", values_to = "nReads") %>%
left_join(run1_4_revamp_formatted_metadata) %>%
filter(., !is.na(Sample_Name)) %>% # this removes all non-EcoFOCI samples. Note this also excludes positive and negative controls. No decontamination has been performed. We should definitely do this at somepoint, but need a conversation as to what approaches
group_by(Sample) %>%
mutate (Tot = sum(nReads),
Prop.abund = nReads / Tot) %>%
group_by (ASV_combo) %>%
mutate (Colmax = max(Prop.abund),
eDNA.Index = Prop.abund / Colmax) %>%
dplyr::select(-Tot,-Colmax)-> run2_MiFish_long
run3_MiFish_asv <- read.table(here("data","REVAMP_out","Run3_from_poseidon_20250103","MiFish_REVAMP_out","dada2","ASVs_counts.tsv"), sep="\t", header=T) %>%
dplyr::rename(ASV=x)
run3_MiFish_asv %>%
dplyr::rename(`Run3:ASV`=ASV) %>%
left_join(run2_3_4_MiFish_united_ASV_tables) %>%
rename_at(vars(starts_with("MP_")), funs(str_replace(., "MP_", ""))) -> run3_MiFish_merge
run3_MiFish_merge %>%
pivot_longer(cols = c(-`ASV_combo`, -`Run2:ASV`, -`Run3:ASV`,-`Run4:ASV`,-`Sequence`,-Kingdom, -Phylum, -Class, -Order, -Family, -Genus, -Species), names_to = "Sample", values_to = "nReads") %>%
left_join(run1_4_revamp_formatted_metadata) %>%
filter(., !is.na(Sample_Name)) %>% # this removes all non-EcoFOCI samples. Note this also excludes positive and negative controls. No decontamination has been performed. We should definitely do this at somepoint, but need a conversation as to what approaches
group_by(Sample) %>%
mutate (Tot = sum(nReads),
Prop.abund = nReads / Tot) %>%
group_by (ASV_combo) %>%
mutate (Colmax = max(Prop.abund),
eDNA.Index = Prop.abund / Colmax) %>%
dplyr::select(-Tot,-Colmax) -> run3_MiFish_long
run4_MiFish_asv <- read.table(here("data","REVAMP_out","Run4_from_poseidon_20250121","MiFish_REVAMP_out","dada2","ASVs_counts.tsv"), sep="\t", header=T) %>%
dplyr::rename(ASV=x)
run4_MiFish_asv %>%
dplyr::rename(`Run4:ASV`=ASV) %>%
left_join(run2_3_4_MiFish_united_ASV_tables) %>%
rename_at(vars(starts_with("MP_")), funs(str_replace(., "MP_", ""))) -> run4_MiFish_merge
run4_MiFish_merge %>%
pivot_longer(cols = c(-`ASV_combo`, -`Run2:ASV`, -`Run3:ASV`,-`Run4:ASV`,-`Sequence`,-Kingdom, -Phylum, -Class, -Order, -Family, -Genus, -Species), names_to = "Sample", values_to = "nReads") %>%
left_join(run1_4_revamp_formatted_metadata) %>%
filter(., !is.na(Sample_Name)) %>% # this removes all non-EcoFOCI samples. Note this also excludes positive and negative controls. No decontamination has been performed. We should definitely do this at somepoint, but need a conversation as to what approaches
group_by(Sample) %>%
mutate (Tot = sum(nReads),
Prop.abund = nReads / Tot) %>%
group_by (ASV_combo) %>%
mutate (Colmax = max(Prop.abund),
eDNA.Index = Prop.abund / Colmax) %>%
dplyr::select(-Tot,-Colmax) -> run4_MiFish_long
bind_rows(run2_MiFish_long, run3_MiFish_long,run4_MiFish_long) -> long_MiFish_EcoFOCI
saveRDS(long_MiFish_EcoFOCI, here("data","long_data","long_MiFish_EcoFOCI.RDS"))
long_MiFish_EcoFOCI<- readRDS(here("data","long_data","long_MiFish_EcoFOCI.RDS"))
long_MiFish_EcoFOCI %>% ungroup() %>%
dplyr::select( Sample  ,         replicates   ,        group1   ,
group2   ,            Sample_Name  ,        Biological_Replicate,
Technical_Replicate , Negative_control,     Cruise_ID_short  ,
Cruise_ID_long ,      Cast_No.   ,          Rosette_position   ,
Station   ,           Sample_volume_ml ,    Time  ,
Depth_m  ,            lat  ,                lon  ,
Temp_C  ,             PSU_ppt  ,            OxySatPerc_percent  ,
OxyConc_umol.per.l ,  Chla_ugrams.per.l ,   PO4_umol.per.l  ,
NO2_umol.per.l  ,     NO3_umol.per.l   ,    NH4_umol.per.l     ,
sites) %>% distinct() %>%
filter(., Cruise_ID_short !="RC_GOA_2022") %>%
mutate(., Depth_bin = if_else(Depth_m >29, "Below 30m","Above 30m" )) -> sample_metadata
varnames <- colnames(long_MiFish_EcoFOCI)
to_remove <- c("Run2:ASV","Run3:ASV","Run4:ASV","ASV_combo","Sequence","nReads","Prop.abund","eDNA.Index")
sample_metadata -> co1_sample_data
#Metadata
co1_sample_data %>%  as.data.frame() -> sampledata
sampledata %>%
group_by(Sample) %>%
filter(n()>1)
rownames(sampledata) <- sampledata$Sample
sample_data(sampledata) -> sampledata
long_MiFish_EcoFOCI %>%
dplyr::select(ASV_combo,Sample, eDNA.Index) %>%
mutate(., eDNA.Index=as.numeric(eDNA.Index)) %>%
mutate(., eDNA.Index=if_else(eDNA.Index=="NaN", 0, eDNA.Index)) %>%
pivot_wider(names_from = Sample, values_from = eDNA.Index, values_fill  =0) -> wide_PA
long_MiFish_EcoFOCI %>%
dplyr::select(ASV_combo, Kingdom,Phylum,Class, Order,Family, Genus, Species) %>%
distinct() %>% as.matrix() -> taxonomy_table
rownames(taxonomy_table) <- wide_PA$ASV_combo
TAX = tax_table(taxonomy_table)
wide_PA %>%
ungroup() %>%
dplyr::select(-ASV_combo) %>% as.matrix() -> otu_table
rownames(otu_table) <- wide_PA$ASV_combo
OTU = otu_table(otu_table, taxa_are_rows = TRUE)
physeq_MiFish = phyloseq(OTU, TAX, sampledata)
physeq_MiFish_c = subset_samples(physeq_MiFish, !is.na(Temp_C) & !is.na(lat) & !is.na(Depth_m))
#Betadiversity
#Generate Vegan formatted data table
method.sampledf <- data.frame(sample_data(physeq_MiFish_c))
method.sampledf %>%
mutate(T2=as.Date(Time),
month = month(Time)) %>%
mutate(., Season = case_when(month < 3 ~"Winter",
month < 6 ~"Spring",
month < 9~ "Summer",
month < 12 ~"Fall")) -> method.sampledf
method.rel_abun<- vegan_otu(physeq_MiFish_c)
#Jaccard dissimilarity matrix
method.d_carn <- vegdist(method.rel_abun, method="jaccard", binary=TRUE)
#PERMANOVA: Method+Site
method.adonis_results <- adonis2(method.rel_abun~Season+ Depth_m+lat+Temp_C+PSU_ppt+OxySatPerc_percent+OxyConc_umol.per.l+Chla_ugrams.per.l+PO4_umol.per.l+NO2_umol.per.l+NO3_umol.per.l+NH4_umol.per.l
, data=method.sampledf,  na.action =na.exclude, by = "terms", method="jaccard", binary=TRUE)
method.adonis_results
method.adonis_results_simple <- adonis2(method.rel_abun~Season +Depth_m+lat+Temp_C+PSU_ppt+OxyConc_umol.per.l+Chla_ugrams.per.l+lon, data=method.sampledf, by = "terms", method="jaccard", binary=TRUE)
method.adonis_results_simple
summary(method.adonis_results_simple)
#Bray dissimilarity matrix
method.d_carn_b <- vegdist(method.rel_abun, method="bray")
#PERMANOVA: Method+Site
method.adonis_results_b <- adonis2(method.rel_abun~ Season + Depth_m+lat+Temp_C+PSU_ppt+OxySatPerc_percent+OxyConc_umol.per.l+Chla_ugrams.per.l+PO4_umol.per.l+NO2_umol.per.l+NO3_umol.per.l+NH4_umol.per.l
, data=method.sampledf,  na.action =na.exclude, by = "terms", method="bray")
method.adonis_results_b
#Bray dissimilarity matrix
method.d_carn_b <- vegdist(method.rel_abun, method="bray")
#PERMANOVA: Method+Site
method.adonis_results_b <- adonis2(method.rel_abun~ Season + Depth_m+lat+Temp_C+PSU_ppt+OxySatPerc_percent+OxyConc_umol.per.l+Chla_ugrams.per.l+PO4_umol.per.l+NO2_umol.per.l+NO3_umol.per.l+NH4_umol.per.l
, data=method.sampledf,  na.action =na.exclude, by = "terms", method="bray")
method.adonis_results_b
ord <- ordinate(physeq_MiFish_c, method = "NMDS", distance = ("jaccard"), binary = TRUE)
##Plot_Ordination
plot_ordination(physeq_MiFish_c, ord, "samples", color = "Temp_C") +
ggtitle(paste0("NMDS - Stress ",round(ord$stress,3))) +
geom_point(size = 4) +
theme_bw()+
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 18, face = "bold"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text=element_text(size=16),
axis.title=element_text(size=16,face="bold"),
legend.title = element_text( size=16, face="bold"),
legend.text = element_text(size=14)
) +
labs(color = "Temp ˚C") +scale_colour_cmocean()
##Plot_Ordination
plot_ordination(surface_co1_c, ord, "samples", color = "Cruise_ID_short") +
ggtitle(paste0("NMDS - Stress ",round(ord$stress,3))) +
geom_point(size = 4) +
theme_bw()+
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 18, face = "bold"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text=element_text(size=16),
axis.title=element_text(size=16,face="bold"),
legend.title = element_text( size=16, face="bold"),
legend.text = element_text(size=14)
) +
labs(color = "Cruise")
##Plot_Ordination
plot_ordination(physeq_MiFish_c, ord, "samples", color = "Cruise_ID_short") +
ggtitle(paste0("NMDS - Stress ",round(ord$stress,3))) +
geom_point(size = 4) +
theme_bw()+
theme(plot.title = element_text(hjust = 0.5,size = 20, face = "bold"),
plot.subtitle = element_text(hjust = 0.5,size = 18, face = "bold"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text=element_text(size=16),
axis.title=element_text(size=16,face="bold"),
legend.title = element_text( size=16, face="bold"),
legend.text = element_text(size=14)
) +
labs(color = "Cruise")
#isolate groups
subsurface_MiFish <- subset_samples(physeq_MiFish_c, Depth_bin == "Below 30m")
subsurface_MiFish <- prune_samples(sample_sums(subsurface_MiFish) > 0, surface_MiFish_sum.tax)
#isolate groups
subsurface_MiFish <- subset_samples(physeq_MiFish_c, Depth_bin == "Below 30m")
subsurface_MiFish <- prune_samples(sample_sums(subsurface_MiFish) > 0, subsurface_MiFish)
subsurface_MiFish_sp = subset_samples(subsurface_MiFish, !is.na(Temp_C) & !is.na(lat) & !is.na(Depth_m))
subsurface_MiFish_sp = subset_taxa(subsurface_MiFish_sp, Kingdom!="Bacteria")
subsurface_MiFish_sp = subset_taxa(subsurface_MiFish_sp, Kingdom!="Environmental Unknown")
surface_MiFish <- subset_samples(physeq_MiFish_c, Depth_bin == "Above 30m")
surface_MiFish <- prune_samples(sample_sums(surface_MiFish) > 0, surface_MiFish)
surface_MiFish_sp = subset_samples(surface_MiFish, !is.na(Temp_C) & !is.na(lat) & !is.na(Depth_m))
surface_MiFish_sp = subset_taxa(surface_MiFish_sp, Kingdom!="Bacteria")
surface_MiFish_sp = subset_taxa(surface_MiFish_sp, Kingdom!="Environmental Unknown")
#Convert groups into vegan outputs
veganComm_surface_MiFish <- vegan_otu(surface_MiFish_sp)
veganComm_benthic_MiFish <- vegan_otu(subsurface_MiFish_sp)
###### iNEXT Species Accumulation Curves
#Create List for iNEXT Species Incidence Frequencies
mor_inc <-list ("Above 30m" =t(veganComm_surface_MiFish),
"Below 30m"=t(veganComm_benthic_MiFish))
species_incidence <-lapply(mor_inc, as.incfreq)
#Convert to iNEXT format
t <- seq(1, 350, by=1)
out.inc_fish <- iNEXT(species_incidence, q=0, datatype="incidence_freq", size=t)
#out.inc2$DataInfo
#Sample‐size‐based R/E curves
ggiNEXT(out.inc_fish, type=1, color.var="Both") +
theme_bw(base_size = 18) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank()) + xlab("Stations") + ylab("Taxa") + scale_colour_manual(values = c("dodgerblue4","#Ed820e"), name = "Group", labels = c("Above 30m", "Below 30m")) + scale_shape_discrete(name = "Group", labels = c("Above 30m", "Below 30m")) + scale_fill_manual(values = c("dodgerblue4","#Ed820e"),name = "Group", labels = c("Above 30m", "Below 30m")) +ggtitle(label = "Accumulation", subtitle="MiFish") + ylim(0,600) +theme(axis.line = element_line(colour = "black"),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.text=element_text(size=16),
axis.title=element_text(size=20,face="bold"),legend.title = element_text( size=12, face="bold"),legend.text = element_text(size=10,
face="bold"), title = element_text(size=20, face="bold") ) + theme(legend.text=element_text(size=16), legend.title=element_text(size=20), axis.title.x=element_blank())
#Sample‐size‐based R/E curves
ggiNEXT(out.inc_fish, type=1, color.var="Both") +
theme_bw(base_size = 18) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank()) + xlab("Stations") + ylab("Taxa") + scale_colour_manual(values = c("dodgerblue4","#Ed820e"), name = "Group", labels = c("Above 30m", "Below 30m")) + scale_shape_discrete(name = "Group", labels = c("Above 30m", "Below 30m")) + scale_fill_manual(values = c("dodgerblue4","#Ed820e"),name = "Group", labels = c("Above 30m", "Below 30m")) +ggtitle(label = "Accumulation", subtitle="MiFish")  +theme(axis.line = element_line(colour = "black"),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.text=element_text(size=16),
axis.title=element_text(size=20,face="bold"),legend.title = element_text( size=12, face="bold"),legend.text = element_text(size=10,
face="bold"), title = element_text(size=20, face="bold") ) + theme(legend.text=element_text(size=16), legend.title=element_text(size=20), axis.title.x=element_blank())
library(zetadiv)
phyloseq_to_df(surface_MiFish_sp) %>%
dplyr::select(.,-Kingdom,-Phylum, -Class,-Order,-Family,-Genus, -Species,sum.taxonomy, -OTU) -> surface_MiFish_2020_sum.tax_sp_df
phyloseq_to_df(surface_MiFish_sp)
phyloseq_to_df(surface_MiFish_sp) %>%
dplyr::select(.,-Kingdom,-Phylum, -Class,-Order,-Family,-Genus, -Species,OTU) -> surface_MiFish_2020_sum.tax_sp_df
surface_MiFish_2020_sum.tax_sp_df
phyloseq_to_df(surface_MiFish_sp) %>%
dplyr::select(.,-Kingdom,-Phylum, -Class,-Order,-Family,-Genus, -Species,-OTU) -> surface_MiFish_2020_sum.tax_sp_df
#Read in Read Data
Data_asvs_sites <- surface_MiFish_2020_sum.tax_sp_df %>%  ungroup()
#Get OTU names
taxa_asvs_sites <- Data_asvs_sites$sum.taxonomy
#Make a presence/absence matrix
Data_asvs_sites %>% dplyr::select(-sum.taxonomy) %>%
mutate_all(., ~replace(., . > 1, 1)) -> DataPA_asvs_sites
#Read in Read Data
Data_asvs_sites <- surface_MiFish_2020_sum.tax_sp_df %>%  ungroup()
#Get OTU names
taxa_asvs_sites <- Data_asvs_sites$ASV_combo
#Make a presence/absence matrix
Data_asvs_sites %>% dplyr::select(-ASV_combo) %>%
mutate_all(., ~replace(., . > 1, 1)) -> DataPA_asvs_sites
DataPA_asvs_sites <- as.data.frame(t(DataPA_asvs_sites))
colnames(DataPA_asvs_sites) <- taxa_asvs_sites
#Calculate zeta diversity decay parameters and plots.
surface_MiFish_2020_sum.tax_sp_zetaDecay.ex_asvs_site <- Zeta.decline.ex(DataPA_asvs_sites,orders=1:20,plot=FALSE)
install.packages("remotes")
remotes::install_github("G-Thomson/gthor")
library(here)
library(gthor)
Path <- "~/Downloads/MetaMag_test4_with_dil_samples.eds"
read.eds(Path, in_file = "Results") -> metamag4
metamag4
read.eds(Path, in_file = "Results") -> metamag4
metamag4
read.eds(Path, in_file = "Results") -> metamag4
metamag4
